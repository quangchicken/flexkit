<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@500&display=swap" rel="stylesheet">
{{ 'toolkit.min.css' | asset_url | stylesheet_tag }}

{% assign tooltip = section.settings.tooltip %}
{% assign product_colored_epoxy_ob = '' %}
{% assign product_clear_epoxy_ob = '' %}
{% if section.settings.product_colored_epoxy != '' %}
    {% assign product_colored_epoxy = section.settings.product_colored_epoxy %}
    {% assign product_colored_epoxy_ob = all_products[section.settings.product_colored_epoxy] %}
{% endif %}
{% if section.settings.product_clear_epoxy != '' %}
    {% assign product_clear_epoxy = section.settings.product_clear_epoxy %}
    {% assign product_clear_epoxy_ob = all_products[section.settings.product_clear_epoxy] %}
{% endif %}
<div id="square-foot-calculator">
    <div class="sf-calculator__container">
        <div class="sf-calculator__block products">
            <h3 class="sf-calculator__block--title">What are you looking for?</h3>
            <div class="sf-calculator__block--content">
                {% if section.blocks.size > 0 %}
                    <div class="sf-calculator__block--systems">
                        {% for block in section.blocks %}
                            {% assign system_link = block.settings.link %}
                            {% assign collection = '' %}
                            {% assign product = '' %}
                            {% if system_link contains '/collections/' %}
                                {% assign system_link = block.settings.link | replace: '/collections/', '' %}
                                {% assign collection = collections[system_link] %}
                            {% elsif system_link contains '/products/' %}
                                {% assign system_link = block.settings.link | replace: '/products/', '' %}
                                {% assign product = all_products[system_link] %}
                            {% endif %} 
                            {% assign system_name = block.settings.title %}
                            <div class="sf-calculator__block--system sf-{{ block.settings.title | handleize }}">
                                <div class="sf-system__product">
                                    <div class="sf-system__product--select sf-product-select-js" id="sf-{{ block.settings.title | handleize }}">
                                        <div class="sf-system__product--select-image">
                                            {% if collection != '' %}
                                                <picture>
                                                    <img src="{{ collection.products[0] | img_url: '100x100', crop: 'center' }}" alt="{{ collection.products[0].featured_image.alt | escape }}" itemprop="image" />
                                                </picture>
                                            {% endif %}
                                            {% if product != '' %}
                                                <picture>
                                                    <img src="{{ product | img_url: '100x100', crop: 'center' }}" alt="{{ product.featured_image.alt | escape }}" itemprop="image" />
                                                </picture>
                                            {% endif %}
                                        </div>
                                        <span class="sf-system__product--select-name">{{ system_name }}</span>
                                    </div>
                                    <div class="sf-system__product--option">

                                        {% if system_name contains 'Flakes' %}
                                        <div class="sf-system__product--additives">
                                            {% if collection.title contains 'Flakes' %}
                                                <button class="sf-system__product--item sf-product-item-js flakes-collection" data-collection-id="#sf-system__{{ collection.id}}" type="button">
                                                    <picture class="sf-system__product--item-image">
                                                        <img  alt="{{ alt | escape }}" src="{{ collection | img_url: '100x' }}" />
                                                    </picture>
                                                    <span class="sf-system__product--item-title">{{ collection.title }}</span>
                                                </button>
                                            {% endif %}
                                            {% for i in (1..8) %}
                                                {% assign product_additives = 'product_link_' | append: i %}
                                                {% if block.settings[product_additives] != '' %}
                                                    {% assign product_url = block.settings[product_additives] %}
                                                    {% assign product_additive = all_products[product_url] %}
                                                    <button class="sf-system__product--item sf-product-item-js" data-product-id="#sf-system__{{ product_additive.id }}" type="button">
                                                        <picture class="sf-system__product--item-image">
                                                            <img  alt="{{ alt | escape }}" src="{{ product_additive | img_url: '100x' }}" />
                                                        </picture>
                                                        <span class="sf-system__product--item-title">{{ product_additive.title }}</span>
                                                    </button>
                                                {% endif %}
                                            {% endfor %}
                                        </div>
                                        {% endif %}

                                        <div class="sf-system__product--grid">
                                            {% if collection != '' %}
                                                {% if collection.title contains 'Flakes' %}
                                                    
                                                {% endif %}
                                                {% assign count = 0 %}
                                                {% for product in collection.products %}                                                  
                                                    {% for i in (1..8) %}
                                                        {% assign product_additives = 'product_link_' | append: i %}
                                                        {% if block.settings[product_additives] != '' %}
                                                            {% assign product_url = block.settings[product_additives] %}
                                                            {% if product_url == product.url and count > forloop.index %}
                                                                {% assign count = forloop.index %}
                                                                {% break %}
                                                            {% endif %}
                                                        {% endif %}
                                                    {% endfor %}
                                                    {% unless product.title == 'Micas' or  product.title == 'Stone Series Flake' or product.title == 'Wood flake chips' or product.title == 'Glitter Flakes' %}
                                                    <button class="sf-system__product--item sf-product-item-js" data-product-id="#sf-system__{{ product.id}}" type="button">
                                                        <picture class="sf-system__product--item-image">
                                                            <img  alt="{{ alt | escape }}" src="{{ product | img_url: '100x' }}" />
                                                        </picture>
                                                        <span class="sf-system__product--item-title">{{ product.title }}</span>
                                                    </button>
                                                    {% endunless %}
                                                {% endfor %}
                                            {% endif %}
                                            {% if product != '' %}
                                                <div class="sf-system__product--options">
                                                    {% render 'sf-system-product-form', product: product, %}
                                                </div>
                                            {% endif %}
                                        </div>
                                        <div class="sf-system__product--form product_form">
                                            <div class="sf-system__variants">
                                                {% if collection != '' %}
                                                    {% for product in collection.products %}
                                                    <div id="sf-system__{{ product.id}}" class="sf-system__variants--item sf-variants-item-js swatch_options">
                                                        {% render 'sf-system-product-form', product: product %}
                                                    </div>
                                                    {% endfor %}
                                                {% endif %}
                                                
                                                {% if system_name contains 'Flakes' %}
                                                    {% for i in (1..8) %}
                                                        {% assign product_additives = 'product_link_' | append: i %}
                                                        {% if block.settings[product_additives] != '' %}
                                                            {% assign product_url = block.settings[product_additives] %}
                                                            {% assign product = all_products[product_url] %}
                                                            <div id="sf-system__{{ product.id}}" class="sf-system__variants--item sf-variants-item-js product-additive swatch_options">
                                                                {% render 'sf-system-product-form', product: product %}
                                                            </div>
                                                        {% endif %}
                                                    {% endfor %}
                                                {% endif %}

                                            </div>
                                            <button class="sf-system__product--option-next sf-product-next-js" type="button">Next</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                {% endif %}
            </div>
            <button id="sf-tooltip-js" class="sf-calculator__block--tooltip" type="button">How it Works?</button>
        </div>
        <div class="sf-calculator__block enter">
            <h3 class="sf-calculator__block--title"><button class="sf-calculator__block--title-back sf-product-back-js" type="button">Back</button>Enter Square Feet</h3>
            <div class="sf-calculator__block--content">
                <div class="sf-calculator__block--input-feet">
                    <span class="label">Total Size</span>
                    <input type="number" id="sf-input-feet" />
                    <span class="ft">FT2</span>
                </div>
                <button id="sf-calculate-js" class="sf-calculator__block--calculate" type="button">Calculate</button>
            </div>
        </div>
        <div class="sf-calculator__block result">
            <h3 class="sf-calculator__block--title"><button class="sf-calculator__block--title-back sf-product-back-js" type="button">Back</button>Result</h3>
            <div class="sf-calculator__block--content">
                <div id="sf-result-js" class="sf-calculator__block--systems">
                </div>
                <div class="sf-calculator__block--summary">
                    <div class="sf-calculator__block--total">
                        <span>Total</span>
                        <span id="sf-total-price" class="price"></span>
                    </div>
                    <button id="sf-addtocart-js" class="sf-calculator__block--addtocart" type="button">Add to Cart</button>
                </div>
            </div>
        </div>
        <div class="sf-calculator__block tooltip">
            <h3 class="sf-calculator__block--title">How it works?</h3>
            <div class="sf-calculator__block--content">
                {{ tooltip }}
            </div>
            <button id="sf-close-tooltip-js" class="sf-calculator__block--close-tooltip" type="button">Back</button>
        </div>
    </div>
    <button id="sf-calculator__close" class="sf-calculator-close-js">Close</button>
</div>
<button class="sf-calculator-close-js">Close</button>
<script>
   
     
    const $sf = jQuery('#square-foot-calculator');
          $sfProductSelect = jQuery('.sf-product-select-js'),
          $sfProductItem = jQuery('.sf-product-item-js'),
          $sfItemVariant = jQuery('.sf-variants-item-js'),
          $sfCalculateButton = jQuery('#sf-calculate-js'),
          $sfNext = jQuery('.sf-product-next-js'),
          $sfTooltip = jQuery('#sf-tooltip-js'),
          $sfCloseTooltip = jQuery('#sf-close-tooltip-js'),
          $sfResult = jQuery('#sf-result-js'),
          $sfTotalPrice = jQuery('#sf-total-price'),
          $sfAddToCart = jQuery('#sf-addtocart-js'),
          $sfBack = jQuery('.sf-product-back-js');
          

    let sfDataForm = [];
          

    const productColored = {{ product_colored_epoxy_ob | json}},
          productClear = {{ product_clear_epoxy_ob | json}},
          productColoredVariants = productColored.variants,
          productClearVariants = productClear.variants,
          productColoredTitle = productColored.title,
          productClearTitle = productClear.title,
          productColoredImage = productColored.featured_image.replace(/(\.[^.]*)$/, "_100x100_crop_center$1")
          productClearImage = productClear.featured_image.replace(/(\.[^.]*)$/, "_100x100_crop_center$1")

    const findVariantColored = function(option1, option2) {
        let el = '';
        productColoredVariants.forEach(element => {
            if(element['option1'] == option1 && element['option2'] == option2){
                el = element;
            }
        });
        return el;
    }

    const findVariantClear = function(option1) {
        let el = '';
        productClearVariants.forEach(element => {
            if(element['option1'] == option1){
                el = element;
            }
        });
        return el;
    }

    const flakesSystem = function(inputSF) {
        inputSF = Number(inputSF);
        if(inputSF > 0) {
            let   coloredEpoxyGallon = inputSF / 250,
                  clearEpoxyGallon  = inputSF / 125,
                  flakesPound = inputSF / 13,
                  coloredId = '',
                  clearId = '';

            sfDataForm = [];

            if((Math.ceil(coloredEpoxyGallon) - coloredEpoxyGallon) > 0.5){
                coloredEpoxyGallon = Math.floor(coloredEpoxyGallon) + 0.5;
            }else{
                coloredEpoxyGallon = Math.ceil(coloredEpoxyGallon);
            }

            if((Math.ceil(clearEpoxyGallon) - clearEpoxyGallon) > 0.5){
                clearEpoxyGallon = Math.floor(clearEpoxyGallon) + 0.5;
            }else{
                clearEpoxyGallon = Math.ceil(clearEpoxyGallon);
            }

            if(coloredEpoxyGallon < 3 && coloredEpoxyGallon > 1.5){
                coloredEpoxyGallon = 3;
            }

            if(clearEpoxyGallon < 3 && clearEpoxyGallon > 1.5){
                clearEpoxyGallon = 3;
            }

            let   $sfVariantSelected = $sf.find('.sf-variants-item-js.selected'),
                    mainProductOp0 = $sfVariantSelected.find('input[name="option-0"]:checked').val(),
                    mainProductOp1 = $sfVariantSelected.find('input[name="option-1"]:checked').val(),
                    mainProductOp2 = $sfVariantSelected.find('input[name="option-2"]:checked').val(),
                    $mainVariant = $sfVariantSelected.find(`option[data-option-0='${mainProductOp0}'][data-option-1='${mainProductOp1}'][data-option-2='${mainProductOp2}']`),
                    mainVariantTitle = $sfVariantSelected.find('select[name="id"]').data('title'),
                    mainVariantId = Number($mainVariant.val()),
                    mainVariantImage = $sfVariantSelected.find('.sf-system__variants--item-image img').attr('src'),
                    mainVariantColor = $mainVariant.data('color'),
                    mainVariantPrice = $mainVariant.data('price');

            let qtyFlakesPound = Math.ceil(flakesPound / 5),
                sizeFlakesPound = qtyFlakesPound * 5;

            if(qtyFlakesPound == 1){
                qtyFlakesPound = 2;
            }
            
            sfDataForm.push({ id: mainVariantId, quantity: qtyFlakesPound });

            let mainTotalPrice = mainVariantPrice * qtyFlakesPound;
            let mainHtmt = '<div class="sf-system__product">';
                mainHtmt += '<div class="sf-system__product--select">';
                mainHtmt += '<div class="sf-system__product--select-image">';
                mainHtmt += `<picture><img src="${mainVariantImage}" alt="" /></picture>`;
                mainHtmt += `</div>`;
                mainHtmt += `<span class="sf-system__product--select-name">`;
                mainHtmt += `<span>${mainVariantTitle} <em>${sizeFlakesPound} Lbs.</em></span>`; 
                mainHtmt += `</span>`;
                mainHtmt += `<span class="sf-system__product--select-price">${Shopify.formatMoney(mainTotalPrice, "{{ shop.money_format }}")}</span>`;
                mainHtmt += `</div></div></div>`;

            //Colored Product

            let sizeColoredEpoxyGallon = [],
                modColoredEpoxyGallon = coloredEpoxyGallon % 15,
                qty_15Colored  = Math.floor(coloredEpoxyGallon / 15);

            if(qty_15Colored  > 0){

                variantColored = findVariantColored('15 Gallon Kit', mainVariantColor);
                coloredId = variantColored['id'];
                coloredPrice = variantColored['price'];
                sfDataForm.push({ id: coloredId, quantity: qty_15Colored });
                sizeColoredEpoxyGallon.push({
                    'name': '15 Gallon Kit',
                    'qty': qty_15Colored,
                    'price': coloredPrice
                })
            }

            if(modColoredEpoxyGallon > 0){
                let qty_3Colored = Math.round(modColoredEpoxyGallon / 3);

                if(modColoredEpoxyGallon % 3 > 1.5){
                    qty_3Colored += 1;
                }
            
                if(qty_3Colored > 0){
                    variantColored = findVariantColored('3 Gallon Kit', mainVariantColor);
                    coloredId = variantColored['id'];
                    coloredPrice = variantColored['price'];
                    sfDataForm.push({ id: coloredId, quantity: qty_3Colored });
                    sizeColoredEpoxyGallon.push({
                        'name': '3 Gallon Kit',
                        'qty': qty_3Colored,
                        'price': coloredPrice
                    })
                }

                modColoredEpoxyGallon = modColoredEpoxyGallon - qty_3Colored * 3

                if(modColoredEpoxyGallon > 0){
                    let qty_1_5Colored = 1;

                    variantColored = findVariantColored('1.5 Gallon Kit', mainVariantColor);
                    coloredId = variantColored['id'];
                    coloredPrice = variantColored['price'];
                    sfDataForm.push({ id: coloredId, quantity: qty_1_5Colored });
                    sizeColoredEpoxyGallon.push({
                        'name': '1.5 Gallon Kit',
                        'qty': qty_1_5Colored,
                        'price': coloredPrice
                    })
                }
            }

            let coloredTotalPrice = 0;
            let coloredHtmt = '<div class="sf-system__product">';
                coloredHtmt += '<div class="sf-system__product--select">';
                coloredHtmt += '<div class="sf-system__product--select-image">';
                coloredHtmt += `<picture><img src="${productColoredImage}" alt="" /></picture>`;
                coloredHtmt += `</div>`;
                coloredHtmt += `<span class="sf-system__product--select-name">`;
                sizeColoredEpoxyGallon.forEach(el => {
                    coloredHtmt += `<span><em>${el['qty']} x ${el['name']}</em> ${productColoredTitle}</span>`;
                    coloredTotalPrice += el['price'] * el['qty'];
                });
                coloredHtmt += `</span>`;
                coloredHtmt += `<span class="sf-system__product--select-price">${Shopify.formatMoney(coloredTotalPrice, "{{ shop.money_format }}")}</span>`;
                coloredHtmt += `</div></div></div>`;

            //Clear Product

            let sizeClearEpoxyGallon = [],
                modClearEpoxyGallon = clearEpoxyGallon % 15,
                qty_15Clear = Math.floor(clearEpoxyGallon / 15);

            if(qty_15Clear  > 0){

                variantClear = findVariantClear('15 Gallon Kit');
                clearId = variantClear['id'];
                clearPrice = variantClear['price'];
                sfDataForm.push({ id: clearId, quantity: qty_15Clear });
                sizeClearEpoxyGallon.push({
                    'name': '15 Gallon Kit',
                    'qty': qty_15Clear,
                    'price': clearPrice
                });
            }

            if(modClearEpoxyGallon > 0){
                let qty_3Clear = Math.round(modClearEpoxyGallon / 3);

                if(modClearEpoxyGallon % 3 > 1.5){
                    qty_3Clear += 1;
                }
                
                if(qty_3Clear > 0){

                    variantClear = findVariantClear('3 Gallon Kit');
                    clearId = variantClear['id'];
                    clearPrice = variantClear['price'];
                    sfDataForm.push({ id: clearId, quantity: qty_3Clear });
                    sizeClearEpoxyGallon.push({
                        'name': '3 Gallon Kit',
                        'qty': qty_3Clear,
                        'price': clearPrice
                    });
                }

                modClearEpoxyGallon = modClearEpoxyGallon - qty_3Clear * 3

                if(modClearEpoxyGallon > 0){
                    let qty_1_5Clear = 1;

                    variantClear = findVariantClear('1.5 Gallon Kit');
                    clearId = variantClear['id'];
                    clearPrice = variantClear['price'];
                    sfDataForm.push({ id: clearId, quantity: qty_1_5Clear });
                    sizeClearEpoxyGallon.push({
                        'name': '1.5 Gallon Kit',
                        'qty': qty_1_5Clear,
                        'price': clearPrice
                    });
                }
            }
            let clearTotalPrice = 0;
            let clearHtmt = '<div class="sf-system__product">';
                clearHtmt += '<div class="sf-system__product--select">';
                clearHtmt += '<div class="sf-system__product--select-image">';
                clearHtmt += `<picture><img src="${productClearImage}" alt="" /></picture>`;
                clearHtmt += `</div>`;
                clearHtmt += `<span class="sf-system__product--select-name">`;
                    sizeClearEpoxyGallon.forEach(el => {
                    clearHtmt += `<span><em>${el['qty']} x ${el['name']}</em> ${productClearTitle}</span>`;
                    clearTotalPrice += el['price'] * el['qty'];
                });
                clearHtmt += `</span>`;
                clearHtmt += `<span class="sf-system__product--select-price">${Shopify.formatMoney(clearTotalPrice, "{{ shop.money_format }}")}</span>`;
                clearHtmt += `</div></div></div>`;
             
            const sfResultHTML = coloredHtmt + clearHtmt + mainHtmt;
            const sfResultTotalPrice = coloredTotalPrice + clearTotalPrice + mainTotalPrice;

            $sfResult.html(sfResultHTML);
            $sfTotalPrice.html(Shopify.formatMoney(sfResultTotalPrice, "{{ shop.money_format }}"));
            jQuery('.sf-calculator__block.enter').slideUp().next().slideDown();
        }
    }

    const metallicEpoxySystem = function(inputSF) {
        inputSF = Number(inputSF);
        if(inputSF > 0) {
            let coloredEpoxyGallon =  inputSF / 85,
                  clearEpoxyGallon  = inputSF / 115,
                  pigmentsOZ = inputSF / 28.8,
                  coloredId = '',
                  clearId = '';

            sfDataForm = [];

            if((Math.ceil(coloredEpoxyGallon) - coloredEpoxyGallon) > 0.5){
                coloredEpoxyGallon = Math.floor(coloredEpoxyGallon) + 0.5;
            }else{
                coloredEpoxyGallon = Math.ceil(coloredEpoxyGallon);
            }

            if((Math.ceil(clearEpoxyGallon) - clearEpoxyGallon) > 0.5){
                clearEpoxyGallon = Math.floor(clearEpoxyGallon) + 0.5;
            }else{
                clearEpoxyGallon = Math.ceil(clearEpoxyGallon);
            }

            if(coloredEpoxyGallon < 3 && coloredEpoxyGallon > 1.5){
                coloredEpoxyGallon = 3;
            }

            if(clearEpoxyGallon < 3 && clearEpoxyGallon > 1.5){
                clearEpoxyGallon = 3;
            }

            let     $sfVariantSelectedClone = $sf.find('.sf-marbelized-metallic-epoxy-system-clone'),
                    $sfVariantSelected = $sf.find('.sf-variants-item-js.selected'),
                    sfMarbelizedMetallicEpoxySystemClone = $sf.find('.sf-marbelized-metallic-epoxy-system .sf-system__product--option').clone(),
                    mainProductOp0 = $sfVariantSelected.find('input[name="option-0"]:checked').val(),
                    mainProductOp1 = $sfVariantSelected.find('input[name="option-1"]:checked').val(),
                    mainProductOp2 = $sfVariantSelected.find('input[name="option-2"]:checked').val(),
                    $mainVariant = $sfVariantSelected.find(`option[data-option-0='${mainProductOp0}'][data-option-1='${mainProductOp1}'][data-option-2='${mainProductOp2}']`),
                    mainVariantTitle = $sfVariantSelected.find('select[name="id"]').data('title'),
                    mainVariantId = Number($mainVariant.val()),
                    mainVariantColor = $mainVariant.data('color');

            sfMarbelizedMetallicEpoxySystemClone.find('.option-index-0 input').each(function(){
                const swatchOptionIdClone = jQuery(this).attr('id') + '-clone';
                jQuery(this).attr('id', swatchOptionIdClone);
                jQuery(this).next().find('label').attr('for', swatchOptionIdClone);
            });

            let mainVariantImage =  $sf.find('.sf-product-item-js.active img').attr('src');

            if($sfVariantSelectedClone.length > 0){
                $mainVariant = $sfVariantSelectedClone.find(`option[data-option-0='${mainProductOp0}'][data-option-1='${mainProductOp1}'][data-option-2='${mainProductOp2}']`),
                mainVariantTitle = $sfVariantSelectedClone.find('select[name="id"]').data('title');
                mainVariantColor = $sfVariantSelectedClone.find('input[name="option-1"]:checked').val();
                mainVariantColor = $mainVariant.data('color');
            }

            // Main Product
            pigmentsOZ = clearEpoxyGallon;
            // if(pigmentsOZ % 2  !== 0){
            //     pigmentsOZ += 1;
            // }       

            let sizepigmentsOZ= [],
                modPigmentsOZ = pigmentsOZ % 3;

            let qty_12oz = Math.floor(pigmentsOZ / 3);

            if(qty_12oz > 0){
                if(modPigmentsOZ > 1.5){
                    qty_12oz += 1;
                    modPigmentsOZ = 0;
                }

                mainProductOp0 = '12 oz';
                $mainVariant = $sfVariantSelected.find(`option[data-option-0='${mainProductOp0}']`);
                mainVariantId = Number($mainVariant.val());
                mainVariantColor = $mainVariant.data('color');
                mainVariantPrice = $mainVariant.data('price');

                sfDataForm.push({ id: mainVariantId, quantity: qty_12oz });
                sizepigmentsOZ.push({
                    'name': mainProductOp0,
                    'qty': qty_12oz,
                    'price': mainVariantPrice
                });
            }

            if(modPigmentsOZ > 0){
                let qty_8oz = 1;
                mainProductOp0 = '8 oz';
                $mainVariant = $sfVariantSelected.find(`option[data-option-0='${mainProductOp0}']`);
                mainVariantId = Number($mainVariant.val());
                mainVariantColor = $mainVariant.data('color');
                mainVariantPrice = $mainVariant.data('price');

                sfDataForm.push({ id: mainVariantId, quantity: qty_8oz });
                sizepigmentsOZ.push({
                    'name': mainProductOp0,
                    'qty': qty_8oz,
                    'price': mainVariantPrice
                });
            }

            let mainTotalPrice = 0;
            let mainHtmt = '';
            if($sfVariantSelectedClone.length > 0 ){
                console.log('123');
                    mainHtmt += '<div class="sf-system__product--select-image">';
                    mainHtmt += `<picture><img src="${mainVariantImage}" alt="" /></picture>`;
                    mainHtmt += `</div>`;
                    mainHtmt += `<span class="sf-system__product--select-name">`;
                    sizepigmentsOZ.forEach(el => {
                        mainHtmt += `<span><em>${el['qty']} x ${el['name']}</em> ${mainVariantTitle}</span>`;
                        mainTotalPrice += el['price'] * el['qty'];
                    });
                    mainHtmt += `</span>`;
                    mainHtmt += `<span class="sf-system__product--select-price">${Shopify.formatMoney(mainTotalPrice, "{{ shop.money_format }}")}</span>`;
                    mainHtmt += `</div>`;
            } else{
                console.log('456');
                mainHtmt += '<div class="sf-system__product">';
                mainHtmt += '<div class="sf-system__product--select">';
                mainHtmt += '<div class="sf-system__product--select-image">';
                mainHtmt += `<picture><img src="${mainVariantImage}" alt="" /></picture>`;
                mainHtmt += `</div>`;
                mainHtmt += `<span class="sf-system__product--select-name">`;
                sizepigmentsOZ.forEach(el => {
                    mainHtmt += `<span><em>${el['qty']} x ${el['name']}</em> ${mainVariantTitle}</span>`;
                    mainTotalPrice += el['price'] * el['qty'];
                });
                mainHtmt += `</span>`;
                mainHtmt += `<span class="sf-system__product--select-price">${Shopify.formatMoney(mainTotalPrice, "{{ shop.money_format }}")}</span>`;
                mainHtmt += `</div>`;
                mainHtmt += `<div class="sf-marbelized-metallic-epoxy-system-clone"></div>`;
                mainHtmt += `</div></div>`;
            }

            let sizeColoredEpoxyGallon = [],
                modColoredEpoxyGallon = coloredEpoxyGallon % 15,
                qty_15Colored  = Math.floor(coloredEpoxyGallon / 15);

            if(qty_15Colored  > 0){

                variantColored = findVariantColored('15 Gallon Kit', mainVariantColor);
                coloredId = variantColored['id'];
                coloredPrice = variantColored['price'];
                sfDataForm.push({ id: coloredId, quantity: qty_15Colored });
                sizeColoredEpoxyGallon.push({
                    'name': '15 Gallon Kit',
                    'qty': qty_15Colored,
                    'price': coloredPrice
                })
            }

            if(modColoredEpoxyGallon > 0){
                let qty_3Colored = Math.floor(modColoredEpoxyGallon / 3);

                if(modColoredEpoxyGallon % 3 > 1.5){
                    qty_3Colored += 1;
                }
            
                if(qty_3Colored > 0){
                    variantColored = findVariantColored('3 Gallon Kit', mainVariantColor);
                    coloredId = variantColored['id'];
                    coloredPrice = variantColored['price'];
                    sfDataForm.push({ id: coloredId, quantity: qty_3Colored });
                    sizeColoredEpoxyGallon.push({
                        'name': '3 Gallon Kit',
                        'qty': qty_3Colored,
                        'price': coloredPrice
                    })
                }

                modColoredEpoxyGallon = modColoredEpoxyGallon - qty_3Colored * 3

                if(modColoredEpoxyGallon > 0){
                    let qty_1_5Colored = 1;

                    variantColored = findVariantColored('1.5 Gallon Kit', mainVariantColor);
                    coloredId = variantColored['id'];
                    coloredPrice = variantColored['price'];
                    sfDataForm.push({ id: coloredId, quantity: qty_1_5Colored });
                    sizeColoredEpoxyGallon.push({
                        'name': '1.5 Gallon Kit',
                        'qty': qty_1_5Colored,
                        'price': coloredPrice
                    })
                }
            }

            let coloredTotalPrice = 0;
            let coloredHtmt = '<div class="sf-system__product">';
                coloredHtmt += '<div class="sf-system__product--select">';
                coloredHtmt += '<div class="sf-system__product--select-image">';
                coloredHtmt += `<picture><img src="${productColoredImage}" alt="" /></picture>`;
                coloredHtmt += `</div>`;
                coloredHtmt += `<span class="sf-system__product--select-name">`;
                sizeColoredEpoxyGallon.forEach(el => {
                    coloredHtmt += `<span><em>${el['qty']} x ${el['name']}</em> ${productColoredTitle}</span>`;
                    coloredTotalPrice += el['price'] * el['qty'];
                });
                coloredHtmt += `</span>`;
                coloredHtmt += `<span class="sf-system__product--select-price">${Shopify.formatMoney(coloredTotalPrice, "{{ shop.money_format }}")}</span>`;
                coloredHtmt += `</div></div></div>`;

            //Clear Product

            let sizeClearEpoxyGallon = [],
                modClearEpoxyGallon = clearEpoxyGallon % 15,
                qty_15Clear = Math.floor(clearEpoxyGallon / 15);

            if(qty_15Clear  > 0){

                variantClear = findVariantClear('15 Gallon Kit');
                clearId = variantClear['id'];
                clearPrice = variantClear['price'];
                sfDataForm.push({ id: clearId, quantity: qty_15Clear });
                sizeClearEpoxyGallon.push({
                    'name': '15 Gallon Kit',
                    'qty': qty_15Clear,
                    'price': clearPrice
                });
            }

            if(modClearEpoxyGallon > 0){
                let qty_3Clear = Math.floor(modClearEpoxyGallon / 3);

                if(modClearEpoxyGallon % 3 > 1.5){
                    qty_3Clear += 1;
                }
                
                if(qty_3Clear > 0){

                    variantClear = findVariantClear('3 Gallon Kit');
                    clearId = variantClear['id'];
                    clearPrice = variantClear['price'];
                    sfDataForm.push({ id: clearId, quantity: qty_3Clear });
                    sizeClearEpoxyGallon.push({
                        'name': '3 Gallon Kit',
                        'qty': qty_3Clear,
                        'price': clearPrice
                    });
                }

                modClearEpoxyGallon = modClearEpoxyGallon - qty_3Clear * 3

                if(modClearEpoxyGallon > 0){
                    let qty_1_5Clear = 1;

                    variantClear = findVariantClear('1.5 Gallon Kit');
                    clearId = variantClear['id'];
                    clearPrice = variantClear['price'];
                    sfDataForm.push({ id: clearId, quantity: qty_1_5Clear });
                    sizeClearEpoxyGallon.push({
                        'name': '1.5 Gallon Kit',
                        'qty': qty_1_5Clear,
                        'price': clearPrice
                    });
                }
            }
            let clearTotalPrice = 0;
            let clearHtmt = '<div class="sf-system__product">';
                clearHtmt += '<div class="sf-system__product--select">';
                clearHtmt += '<div class="sf-system__product--select-image">';
                clearHtmt += `<picture><img src="${productClearImage}" alt="" /></picture>`;
                clearHtmt += `</div>`;
                clearHtmt += `<span class="sf-system__product--select-name">`;
                    sizeClearEpoxyGallon.forEach(el => {
                    clearHtmt += `<span><em>${el['qty']} x ${el['name']}</em> ${productClearTitle}</span>`;
                    clearTotalPrice += el['price'] * el['qty'];
                });
                clearHtmt += `</span>`;
                clearHtmt += `<span class="sf-system__product--select-price">${Shopify.formatMoney(clearTotalPrice, "{{ shop.money_format }}")}</span>`;
                clearHtmt += `</div></div></div>`;
            
            const sfResultHTML = coloredHtmt + clearHtmt + mainHtmt;
            const sfResultTotalPrice = coloredTotalPrice + clearTotalPrice + mainTotalPrice;

            if($sfVariantSelectedClone.length > 0 ){
                $sfResult.find('.sf-marbelized-metallic-epoxy-system-clone').prev().html(mainHtmt);
            } else {
                $sfResult.html(sfResultHTML).find('.sf-marbelized-metallic-epoxy-system-clone').append(sfMarbelizedMetallicEpoxySystemClone);
                sfMarbelizedMetallicEpoxySystemClone.on('click', '.sf-product-item-js', function(e) {
                    const   $this = jQuery(this),
                            item = jQuery(this).data('product-id');

                    if(!$this.hasClass('active')){
                        $this.addClass('active').parent().nextAll('.sf-system__product--form').find(item).addClass('selected').slideDown();
                        jQuery('.sf-product-item-js').not($this).removeClass('active');
                        jQuery('.sf-variants-item-js').not(item).removeClass('selected');
                    }
                    jQuery('.sf-product-item-js').not($this).removeClass('active');
                    metallicEpoxySystem(inputSF);
                    console.log(inputSF);
                    console.log($sfVariantSelectedClone.length);
                });
            }

            $sfTotalPrice.html(Shopify.formatMoney(sfResultTotalPrice, "{{ shop.money_format }}"));
            jQuery('.sf-calculator__block.enter').slideUp().next().slideDown();
        }
    }

    const solicColorEpoxy = function(inputSF) {
        inputSF = Number(inputSF);
        if(inputSF > 0) {
            let coloredEpoxyGallon =  inputSF / 112.5,
                  coloredId = '',
                  coloredPrice = '';
            
            sfDataForm = [];      

            if((Math.ceil(coloredEpoxyGallon) - coloredEpoxyGallon) > 0.5){
                coloredEpoxyGallon = Math.floor(coloredEpoxyGallon) + 0.5;
            }else{
                coloredEpoxyGallon = Math.ceil(coloredEpoxyGallon);
            }

            let $sfVariantSelectedClone = $sf.find('.sf-solid-color-epoxy-system-clone'),
                $sfVariantSelected = $sf.find('.sf-product-select-js.active').parent(),
                sfEpoxySystemClone = $sfVariantSelected.find('.sf-system__product--options').clone(),
                mainVariantTitle = $sfVariantSelected.find('select[name="id"]').data('title'),
                mainVariantColor = $sfVariantSelected.find('input[name="option-1"]:checked').val(),
                mainVariantImage = $sfVariantSelected.find('input[name="option-1"]:checked').next().find('label').data('image');
                
            sfEpoxySystemClone.find('.option-index-1 input').each(function(){
                const swatchOptionIdClone = jQuery(this).attr('id') + '-clone';
                jQuery(this).attr('id', swatchOptionIdClone);
                jQuery(this).next().find('label').attr('for', swatchOptionIdClone);
            });
           
            if($sfVariantSelectedClone.length > 0){
                mainVariantTitle = $sfVariantSelectedClone.find('select[name="id"]').data('title');
                mainVariantColor = $sfVariantSelectedClone.find('input[name="option-1"]:checked').val();
                mainVariantImage = $sfVariantSelectedClone.find('input[name="option-1"]:checked').next().find('label').data('image');
            }

            let $mainVariant = '';
            //Colored Product

            let sizeColoredEpoxyGallon = [],
                modColoredEpoxyGallon = coloredEpoxyGallon % 15,
                qty_15Colored  = Math.floor(coloredEpoxyGallon / 15);

              

            if(qty_15Colored  > 0){
                $mainVariant = $sfVariantSelected.find(`option[data-option-0='15 Gallon Kit'][data-option-1='${mainVariantColor}']`);
                coloredId = Number($mainVariant.val());
                coloredPrice = $mainVariant.data('price');
                sfDataForm.push({ id: coloredId, quantity: qty_15Colored });
                sizeColoredEpoxyGallon.push({
                    'name': '15 Gallon Kit',
                    'qty': qty_15Colored,
                    'price': coloredPrice
                });
            }

            if(modColoredEpoxyGallon > 0){
                let qty_3Colored = Math.floor(modColoredEpoxyGallon / 3);

                if(modColoredEpoxyGallon % 3 > 1.5){
                    qty_3Colored += 1;
                }
                
                if(qty_3Colored > 0){
                    $mainVariant = $sfVariantSelected.find(`option[data-option-0='3 Gallon Kit'][data-option-1='${mainVariantColor}']`);
                    coloredId = Number($mainVariant.val());
                    coloredPrice = $mainVariant.data('price');
                    sfDataForm.push({ id: coloredId, quantity: qty_3Colored });
                    sizeColoredEpoxyGallon.push({
                        'name': '3 Gallon Kit',
                        'qty': qty_3Colored,
                        'price': coloredPrice
                    })
                }

                modColoredEpoxyGallon = modColoredEpoxyGallon - qty_3Colored * 3

                if(modColoredEpoxyGallon > 0){
                    let qty_1_5Colored = 1;

                    $mainVariant = $sfVariantSelected.find(`option[data-option-0='1.5 Gallon Kit'][data-option-1='${mainVariantColor}']`);
                    coloredId = Number($mainVariant.val());
                    coloredPrice = $mainVariant.data('price');
                    sfDataForm.push({ id: coloredId, quantity: qty_1_5Colored });
                    sizeColoredEpoxyGallon.push({
                        'name': '1.5 Gallon Kit',
                        'qty': qty_1_5Colored,
                        'price': coloredPrice
                    })
                }
            }
            let coloredTotalPrice = 0,
                coloredHtmt = '';
            if($sfVariantSelectedClone.length > 0){    
                    coloredHtmt += '<div class="sf-system__product--select-image">';
                    coloredHtmt += `<picture><img src="${mainVariantImage}" alt="" /></picture>`;
                    coloredHtmt += `</div>`;
                    coloredHtmt += `<span class="sf-system__product--select-name">`;
                    sizeColoredEpoxyGallon.forEach(el => {
                        coloredHtmt += `<span><em>${el['qty']} x ${el['name']}</em> ${mainVariantTitle}</span>`;
                        coloredTotalPrice += el['price'] * el['qty'];
                    });
                    coloredHtmt += `</span>`;
                    coloredHtmt += `<span class="sf-system__product--select-price">${Shopify.formatMoney(coloredTotalPrice, "{{ shop.money_format }}")}</span>`;

                $sfResult.find('.sf-system__product--select').html(coloredHtmt);
            }else{
                    coloredHtmt += '<div class="sf-system__product">';
                    coloredHtmt += '<div class="sf-system__product--select">';
                    coloredHtmt += '<div class="sf-system__product--select-image">';
                    coloredHtmt += `<picture><img src="${mainVariantImage}" alt="" /></picture>`;
                    coloredHtmt += `</div>`;
                    coloredHtmt += `<span class="sf-system__product--select-name">`;
                    sizeColoredEpoxyGallon.forEach(el => {
                        coloredHtmt += `<span><em>${el['qty']} x ${el['name']}</em> ${mainVariantTitle}</span>`;
                        coloredTotalPrice += el['price'] * el['qty'];
                    });
                    coloredHtmt += `</span>`;
                    coloredHtmt += `<span class="sf-system__product--select-price">${Shopify.formatMoney(coloredTotalPrice, "{{ shop.money_format }}")}</span>`;
                    coloredHtmt += `</div>`;
                    coloredHtmt += `<div class="sf-solid-color-epoxy-system-clone"></div>`;
                    coloredHtmt += `</div>`;

                $sfResult.html(coloredHtmt).find('.sf-solid-color-epoxy-system-clone').append(sfEpoxySystemClone);
                sfEpoxySystemClone.on('click', '.swatch-element', function(e) {
                    jQuery(this).prev().prop('checked', true);
                    solicColorEpoxy(inputSF);
                });
                jQuery('.sf-calculator__block.enter').slideUp().next().slideDown();
            }
            $sfTotalPrice.html(Shopify.formatMoney(coloredTotalPrice, "{{ shop.money_format }}"));
        }
    }

    const sfAddToCart = function(){
		const items = {'items': sfDataForm };
		jQuery.ajax({
			type: 'POST',
			url: '/cart/add.js',
			data: items,
			dataType: 'json',
			success: function() { 
				console.log('Added to cart');
                window.location.href = '/cart';
			},
			error: function() {
				console.log("There's something wrong");
			}
		});
	}
    
    $sfProductSelect.click(function(){
        const $this = jQuery(this);

        if(!$this.hasClass('active')){
            $this.addClass('active').next().slideDown();
            $sfProductSelect.not($this).removeClass('active').next().slideUp();
            if($this.attr('id') == 'sf-flakes-epoxy-system' && !$this.next().find('.sf-system__product--item').hasClass('active')){
                $this.parent().addClass('inactive-next');
            }
        }  
    });

    $sfItemVariant.find('.option-index-0 label').click(function(){
        const $this = jQuery(this);
        const $sfProductSelected = $sf.find('.sf-product-select-js.active');
        const sfType = $sfProductSelected.attr('id');

        if(sfType == 'sf-flakes-epoxy-system'){
            const $thisParent = $this.parents('.sf-variants-item-js').eq(0);
            const thumbnailItem = $this.data('image');

            $thisParent.find('.sf-system__variants--item-image img').attr('src', thumbnailItem);
        }
    });


    $sfProductItem.click(function(){
        const $this = jQuery(this),
              item = jQuery(this).data('product-id');

        if(!$this.hasClass('active')){
            if($this.hasClass('flakes-collection')){
                $this.addClass('active show').parent().nextAll('.sf-system__product--grid').slideDown();
                $this.parents('.sf-system__product').eq(0).addClass('inactive-next');
            } else{
                $this.addClass('active').parent().nextAll('.sf-system__product--form').find(item).addClass('selected').slideDown();
                $this.parent().nextAll('.sf-system__product--grid').slideUp();
                jQuery('#sf-flakes-epoxy-system').parent().removeClass('inactive-next');
                if($this.not(jQuery('.flakes-collection')).parent().hasClass('sf-system__product--additives')){
                    jQuery('.flakes-collection').removeClass('show');
                }
            }

            $sfProductItem.not($this).removeClass('active'); 
            $sfItemVariant.not(item).removeClass('selected').slideUp();
            
            jQuery('.sf-system__product--option').removeClass('sf-system__product--option-invalid');
        }
    });

    $sfNext.click(function(){
        const $sfProductSelected = $sf.find('.sf-product-select-js.active');
        const sfType = $sfProductSelected.attr('id');
        let sfValidate = true;
        if(sfType == 'sf-flakes-epoxy-system'){
            if($sfProductSelected.next().find('.sf-variants-item-js.selected input[name="option-0"]').length > 0){
                if($sfProductSelected.next().find('.sf-variants-item-js.selected input[name="option-0"]:checked').length === 0){
                    sfValidate = false;
                }
            }     
            if($sfProductSelected.next().find('.sf-variants-item-js.selected input[name="option-1"]').length > 0){
                if($sfProductSelected.next().find('.sf-variants-item-js.selected input[name="option-1"]:checked').length === 0){
                    sfValidate = false;
                }
            }     
            if($sfProductSelected.next().find('.sf-variants-item-js.selected input[name="option-2"]').length > 0){
                if($sfProductSelected.next().find('.sf-variants-item-js.selected input[name="option-2"]:checked').length === 0){
                    sfValidate = false;
                }
            }     
        }

        if(sfType == 'sf-marbelized-metallic-epoxy-system'){
            if($sfProductSelected.next().find('.sf-product-item-js.active').length === 0){
                sfValidate = false;
            }
        }

        if(sfType == 'sf-solid-color-epoxy-system'){
            if($sfProductSelected.next().find('.sf-variants-item-js.selected input[name="option-1"]').length > 0){
                if($sfProductSelected.next().find('.sf-variants-item-js.selected input[name="option-1"]:checked').length === 0){
                    sfValidate = false;
                }
            }     
        }
        
        if(sfValidate == true){
            jQuery('.sf-calculator__block.products').slideUp().next().slideDown();
            jQuery('.sf-system__product--option').removeClass('sf-system__product--option-invalid');
        } else {
            jQuery(this).parents('.sf-system__product--option').addClass('sf-system__product--option-invalid');
        }
    });

    $sfBack.click(function(){
        jQuery(this).parents('.sf-calculator__block').slideUp().prev().slideDown();
        jQuery('.sf-solid-color-epoxy-system-clone').remove();
        jQuery('.sf-marbelized-metallic-epoxy-system-clone').remove();
    });

    $sfTooltip.click(function(){
        jQuery('.sf-calculator__block.products').slideUp().parent().find('.tooltip').slideDown();
    });
    
    $sfCloseTooltip.click(function(){
        jQuery('.sf-calculator__block.tooltip').slideUp().parent().find('.sf-calculator__block.products').slideDown();
    });
    
    $sfCalculateButton.click(function(e){
        const $sfProductSelected = $sf.find('.sf-product-select-js.active');
        const sfType = $sfProductSelected.attr('id');

        const sfInputFeet = jQuery('#sf-input-feet').val();

        if(sfType == 'sf-flakes-epoxy-system'){
            flakesSystem(sfInputFeet);          
        }

        if(sfType == 'sf-marbelized-metallic-epoxy-system'){
            metallicEpoxySystem(sfInputFeet);   
        }

        if(sfType == 'sf-solid-color-epoxy-system'){
            solicColorEpoxy(sfInputFeet);
        }

    });

    $sfAddToCart.click(function(e){
        sfAddToCart();
    });

    jQuery('#sf-calculator-btn').click(function(e){
        jQuery('#shopify-section-square-foot-calculator').addClass('active');
    });
    jQuery('.sf-calculator-close-js').click(function(e){
        jQuery('#shopify-section-square-foot-calculator').removeClass('active');
    });
    
    let SFInterval = setInterval(function (interval) {
        if(jQuery(document).find('#chatra').length > 0){
            const $chatraIframe = jQuery(document).find('#chatra');
            let SFBtnBottom = 232;
            if($chatraIframe.height() > $chatraIframe.width() && $chatraIframe.height() < 400){
                SFBtnBottom = $chatraIframe.height();
                jQuery('.sf-calculator-btn-fixed').css('bottom', SFBtnBottom);
                clearInterval(SFInterval);
            }
        }
    }, 1000);       
</script>

{% schema %}
  {
    "name": "Square Foot Calculator",
    "max_blocks": 3,
    "settings": [
        {
            "type": "richtext",
            "id": "tooltip",
            "label": "How It Works?",
            "default": "<p>Proin lobortis vel ipsum non ullamcorper. Integer et vulputate turpis. Nunc</p>"
        },
        {
            "type": "product",
            "id": "product_colored_epoxy",
            "label": "Product Colored Epoxy"
        },
        {
            "type": "product",
            "id": "product_clear_epoxy",
            "label": "Product Clear Epoxy"
        }
    ],
    "blocks": [
        {
            "type": "text",
            "name": "System",
            "settings": [
                {
                    "type": "text",
                    "id": "title",
                    "label": "System Name"
                },
                {
                    "type": "url",
                    "id": "link",
                    "label": "System Link"
                },
                {
                    "type": "product",
                    "id": "product_link_1",
                    "label": "Product Link 1"
                },
                {
                    "type": "product",
                    "id": "product_link_2",
                    "label": "Product Link 2"
                },
                {
                    "type": "product",
                    "id": "product_link_3",
                    "label": "Product Link 3"
                },
                {
                    "type": "product",
                    "id": "product_link_4",
                    "label": "Product Link 4"
                },
                {
                    "type": "product",
                    "id": "product_link_5",
                    "label": "Product Link 5"
                },
                {
                    "type": "product",
                    "id": "product_link_6",
                    "label": "Product Link 6"
                },
                {
                    "type": "product",
                    "id": "product_link_7",
                    "label": "Product Link 7"
                },
                {
                    "type": "product",
                    "id": "product_link_8",
                    "label": "Product Link 8"
                }
            ]
        }
    ]
  }
{% endschema %}
